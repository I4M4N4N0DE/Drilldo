var N=Object.defineProperty;var U=(r,t,e)=>t in r?N(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var M=(r,t,e)=>(U(r,typeof t!="symbol"?t+"":t,e),e);import{R as P,o as Q,c as J,a as D,Q as G}from"./viewer-56c5588e.js";function V(r,t,e){switch(e){case">":return r>t;case">=":return r>=t;case"<":return r<t;case"<=":return r<=t;case"=":return r===t;case"!=":return r!==t;default:return r===t}}function E(r){return r==null}function d(r){return Array.isArray(r)}function O(r){return typeof r=="function"}function K(r){return Y(r)===0}function Y(r){return d(r)?r.length:Object.keys(r).length}function X(r,t,e,s="SORT_REGULAR"){let i=-1;const n=r.map(o=>({criteria:t.map(h=>typeof h=="function"?h(o):o[h]),index:++i,value:o}));return Z(n,(o,a)=>tt(o,a,e,s))}function Z(r,t){let e=r.length;r.sort(t);const s=[];for(;e--;)s[e]=r[e].value;return s}function tt(r,t,e,s){let i=-1;const n=r.criteria,o=t.criteria,a=n.length;for(;++i<a;){const h=et(n[i],o[i],s);if(h){const c=e[i];return h*(c==="desc"?-1:1)}}return r.index-t.index}function et(r,t,e){if(r!==t){const s=r!==void 0,i=r===null,n=r===r,o=t!==void 0,a=t===null;return(typeof r!="number"||typeof t!="number")&&(r=String(r),t=String(t),e==="SORT_FLAG_CASE"&&(r=r.toUpperCase(),t=t.toUpperCase())),!a&&r>t||i&&o||!s||!n?1:-1}return 0}function st(r,t){return r.reduce((e,s)=>{const i=t(s);return e[i]===void 0&&(e[i]=[]),e[i].push(s),e},{})}function A(r){throw new Error(["[Pinia ORM]"].concat(r).join(" "))}function $(r,t){r||A(t)}function it(r,t){let e="",s=r;for(;s--;)e+=t[Math.random()*64|0];return e}function nt(r,t){const e=t?{key:r,params:t}:{key:r},s=JSON.stringify(e);return typeof process>"u"?btoa(s):Buffer!==void 0?Buffer.from(s,"utf8").toString("base64"):s}function k(r,t){if(r===t)return!0;if(r instanceof Date&&t instanceof Date)return r.getTime()===t.getTime();if(!r||!t||typeof r!="object"&&typeof t!="object")return r===t;if(r.prototype!==t.prototype)return!1;const e=Object.keys(r);return e.length!==Object.keys(t).length?!1:e.every(s=>k(r[s],t[s]))}class rt{constructor(t,e={},s={}){if(!t||typeof t!="string")throw new Error(`Expected a string key for Entity, but found ${t}.`);const{idAttribute:i="id",mergeStrategy:n=(a,h)=>({...a,...h}),processStrategy:o=a=>({...a})}=s;this._key=t,this._getId=i,this._mergeStrategy=n,this._processStrategy=o,this.define(e)}get key(){return this._key}define(t){this.schema=Object.keys(t).reduce((e,s)=>{const i=t[s];return{...e,[s]:i}},this.schema||{})}getId(t,e,s){return this._getId(t,e,s)}merge(t,e){return this._mergeStrategy(t,e)}normalize(t,e,s,i,n,o){const a=this.getId(t,e,s),h=this.key;if(h in o||(o[h]={}),a in o[h]||(o[h][a]=[]),o[h][a].includes(t))return a;o[h][a].push(t);const c=this._processStrategy(t,e,s);return Object.keys(this.schema).forEach(l=>{if(c.hasOwnProperty(l)&&typeof c[l]=="object"){const y=this.schema[l],g=typeof y=="function"?y(t):y;c[l]=i(c[l],c,l,g,n,o)}}),n(this,c,t,e,s),a}}class _{constructor(t,e){e&&(this._schemaAttribute=typeof e=="string"?s=>s[e]:e),this.define(t)}get isSingleSchema(){return!this._schemaAttribute}define(t){this.schema=t}getSchemaAttribute(t,e,s){return!this.isSingleSchema&&this._schemaAttribute(t,e,s)}inferSchema(t,e,s){if(this.isSingleSchema)return this.schema;const i=this.getSchemaAttribute(t,e,s);return this.schema[i]}normalizeValue(t,e,s,i,n,o){const a=this.inferSchema(t,e,s);if(!a)return t;const h=i(t,e,s,a,n,o);return this.isSingleSchema||h===void 0||h===null?h:{id:h,schema:this.getSchemaAttribute(t,e,s)}}}class ot extends _{constructor(t,e){if(!e)throw new Error('Expected option "schemaAttribute" not found on UnionSchema.');super(t,e)}normalize(t,e,s,i,n,o){return this.normalizeValue(t,e,s,i,n,o)}}const at=r=>{if(Array.isArray(r)&&r.length>1)throw new Error(`Expected schema definition to be a single schema, but found ${r.length}.`);return r[0]},F=r=>Array.isArray(r)?r:Object.keys(r).map(t=>r[t]),ht=(r,t,e,s,i,n,o)=>F(t).map(a=>i(a,e,s,at(r),n,o));class ct extends _{normalize(t,e,s,i,n,o){return F(t).map(a=>this.normalizeValue(a,e,s,i,n,o)).filter(a=>a!=null)}}const lt=(r,t,e,s,i,n,o)=>{const a={...t};return Object.keys(r).forEach(h=>{const c=r[h],l=typeof c=="function"?c(t):c,y=i(t[h],t,h,l,n,o);y==null?delete a[h]:a[h]=y}),a},S=(r,t,e,s,i,n)=>typeof r!="object"||!r?r:typeof s=="object"&&(!s.normalize||typeof s.normalize!="function")?(Array.isArray(s)?ht:lt)(s,r,t,e,S,i,n):s.normalize(r,t,e,S,i,n),ut=r=>(t,e,s,i,n)=>{const o=t.key,a=t.getId(s,i,n);o in r||(r[o]={}),r[o][a]=r[o][a]?t.merge(r[o][a],e):e},C={Array:ct,Entity:rt,Union:ot},dt=(r,t)=>{if(!r||typeof r!="object")throw new Error(`Unexpected input given to normalize. Expected type to be "object", found "${r===null?"null":typeof r}".`);const e={},s=ut(e),n=S(r,r,null,t,s,{});return{entities:e,result:n}};class q{constructor(t){this.model=t,this.key=""}setKey(t){return this.key=t,this}}class f extends q{constructor(t,e){super(t),this.parent=t,this.related=e}getRelated(){return this.related}getKeys(t,e){return t.map(s=>s[e])}onDelete(t){return this.onDeleteMode=t,this}mapToDictionary(t,e){return t.reduce((s,i)=>{const[n,o]=e(i);return s[n]||(s[n]=[]),s[n].push(o),s},{})}}class T extends f{constructor(t,e,s,i,n){super(t,t),this.relatedModels=e,this.relatedTypes=this.createRelatedTypes(e),this.morphId=s,this.morphType=i,this.ownerKey=n}createRelatedTypes(t){return t.reduce((e,s)=>(e[s.$entity()]=s,e),{})}getType(){return this.morphType}getRelateds(){return this.relatedModels}define(t){return t.union(this.relatedModels,(e,s,i)=>{const n=s[this.morphType],o=this.relatedTypes[n],a=this.ownerKey||o.$getKeyName();return s[this.morphId]=e[a],n})}attach(t,e){}addEagerConstraints(t,e){}match(t,e,s){const i=this.buildDictionary(s,e);e.forEach(n=>{var c;const o=n[this.morphType],a=n[this.morphId],h=((c=i[o])==null?void 0:c[a])??null;n.$setRelation(t,h)})}make(t,e){return!t||!e?null:this.relatedTypes[e].$newInstance(t)}buildDictionary(t,e){const s=this.getKeysByEntity(e),i={};for(const n in s){const o=this.relatedTypes[n];$(!!o,[`Trying to load "morph to" relation of \`${n}\``,"but the model could not be found."]);const a=this.ownerKey||o.$getKeyName(),h=t.newQueryWithConstraints(n).whereIn(a,s[n]).get(!1);i[n]=h.reduce((c,l)=>(c[l[a]]=l,c),{})}return i}getKeysByEntity(t){return t.reduce((e,s)=>{const i=s[this.morphType],n=s[this.morphId];return n!==null&&this.relatedTypes[i]!==void 0&&(e[i]||(e[i]=[]),e[i].push(n)),e},{})}}class I extends q{constructor(t,e=null){super(t),this.isNullable=!0,this.value=typeof e=="function"?e():e}notNullable(){return this.isNullable=!1,this}makeReturn(t,e){return e===void 0?this.value:e===null?(this.isNullable||this.throwWarning(["is set as non nullable!"]),e):(typeof e!==t&&this.throwWarning([e,"is not a",t]),e)}throwWarning(t){console.warn(["[Pinia ORM]"].concat([`Field ${this.model.$entity()}:${this.key} - `,...t]).join(" "))}}class z extends I{constructor(t,e=21){super(t),this.urlAlphabet="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict",this.size=21,this.size=e}make(t){const e=this.model.$casts()[this.model.$getKeyName()];return e?t??e.newRawInstance(this.model.$fields()).set(t):t??it(this.size,this.urlAlphabet)}}class ft{constructor(t){this.schemas={},this.model=t}one(t,e){t=t||this.model,e=e||this.model;const s=`${t.$entity()}${e.$entity()}`;if(this.schemas[s])return this.schemas[s];const i=this.newEntity(t,e);this.schemas[s]=i;const n=this.definition(t);return i.define(n),i}many(t,e){return new C.Array(this.one(t,e))}union(t,e){const s=t.reduce((i,n)=>(i[n.$entity()]=this.one(n),i),{});return new C.Union(s,e)}newEntity(t,e){const s=t.$entity(),i=this.idAttribute(t,e);return new C.Entity(s,{},{idAttribute:i})}idAttribute(t,e){const s=this.getUidPrimaryKeyPairs(t);return(i,n,o)=>{o!==null&&e.$fields()[o].attach(n,i);for(const h in s)E(i[h])&&(i[h]=s[h].setKey(h).make(i[h]));return t.$getIndexId(i)}}getUidPrimaryKeyPairs(t){const e=t.$fields(),s=t.$getKeyName(),i=d(s)?s:[s],n={};return i.forEach(o=>{const a=e[o];a instanceof z&&(n[o]=a)}),n}definition(t){const e=t.$fields(),s={};for(const i in e){const n=e[i];n instanceof f&&(s[i]=n.define(this))}return s}}class yt{constructor(t){this.model=t}process(t){const e=this.normalize(t);return[t,e]}normalize(t){const e=d(t)?[this.getSchema()]:this.getSchema();return dt(t,e).entities}getSchema(){return new ft(this.model).one()}}function pt(){return{save(r){this.data={...this.data,...r}},insert(r){this.data={...this.data,...r}},update(r){this.data={...this.data,...r}},fresh(r){this.data=r},destroy(r){const t={};for(const e in this.data)r.includes(e)||(t[e]=this.data[e]);this.data=t},delete(r){const t={};for(const e in this.data)r.includes(e)||(t[e]=this.data[e]);this.data=t},flush(){this.data={}}}}function H(r,t){return P(r,{state:()=>({data:{}}),actions:pt(),...t})}class W extends f{constructor(t,e,s,i,n,o,a){super(t,e),this.pivotKey="pivot",this.pivot=s,this.foreignPivotKey=i,this.relatedPivotKey=n,this.parentKey=o,this.relatedKey=a}getRelateds(){return[this.related,this.pivot]}define(t){return t.many(this.related,this.parent)}attach(t,e){const s=e.pivot??{};s[this.foreignPivotKey]=t[this.parentKey],s[this.relatedPivotKey]=e[this.relatedKey],e[`pivot_${this.pivot.$entity()}`]=s}make(t){return t?t.map(e=>this.related.$newInstance(e)):[]}match(t,e,s){const i=s.get(!1);e.forEach(n=>{const o=[];i.forEach(a=>{const h=a[this.relatedKey],c=s.newQuery(this.pivot.$entity()).where(this.relatedPivotKey,h).where(this.foreignPivotKey,n[this.parentKey]).first(),l=a.$newInstance(a.$toJson());l.$setRelation("pivot",c),c&&o.push(l)}),n.$setRelation(t,o)})}addEagerConstraints(t,e){const s=t.newQuery(this.pivot.$entity()).where(this.foreignPivotKey,this.getKeys(e,this.parentKey)).get(!1).map(i=>i[this.relatedPivotKey]);t.whereIn(this.relatedKey,s)}}class b{constructor(t,e,s,i,n){this.wheres=[],this.orders=[],this.groups=[],this.take=null,this.skip=0,this.visible=["*"],this.hidden=[],this.eagerLoad={},this.fromCache=!1,this.cacheConfig={},this.database=t,this.model=e,this.pinia=n,this.cache=s,this.hydratedData=i}newQuery(t){return new b(this.database,this.database.getModel(t),this.cache,new Map,this.pinia)}newQueryWithConstraints(t){const e=new b(this.database,this.database.getModel(t),this.cache,new Map,this.pinia);return e.eagerLoad={...this.eagerLoad},e.wheres=[...this.wheres],e.orders=[...this.orders],e.take=this.take,e.skip=this.skip,e.fromCache=this.fromCache,e.cacheConfig=this.cacheConfig,e}newQueryForRelation(t){return new b(this.database,t.getRelated(),this.cache,new Map,this.pinia)}newInterpreter(){return new yt(this.model)}commit(t,e){const s=H(this.model.$baseEntity(),this.model.$piniaOptions())(this.pinia);return t&&typeof s[t]=="function"&&s[t](e),this.cache&&["get","all","insert","flush","delete","update","destroy"].includes(t)&&this.cache.clear(),s.$state.data}withMeta(){return this.makeVisible(["_meta"])}makeVisible(t){return this.visible=t,this}makeHidden(t){return this.hidden=t,this}where(t,e){return this.wheres.push({field:t,value:e,boolean:"and"}),this}whereIn(t,e){return e instanceof Set&&(e=Array.from(e)),this.wheres.push({field:t,value:e,boolean:"and"}),this}whereId(t){return this.where(this.model.$getKeyName(),t)}orWhere(t,e){return this.wheres.push({field:t,value:e,boolean:"or"}),this}whereHas(t,e=()=>{},s,i){return this.where(this.getFieldWhereForRelations(t,e,s,i))}orWhereHas(t,e=()=>{},s,i){return this.orWhere(this.getFieldWhereForRelations(t,e,s,i))}has(t,e,s){return this.where(this.getFieldWhereForRelations(t,()=>{},e,s))}orHas(t,e,s){return this.orWhere(this.getFieldWhereForRelations(t,()=>{},e,s))}doesntHave(t){return this.where(this.getFieldWhereForRelations(t,()=>{},"=",0))}orDoesntHave(t){return this.orWhere(this.getFieldWhereForRelations(t,()=>{},"=",0))}whereDoesntHave(t,e=()=>{}){return this.where(this.getFieldWhereForRelations(t,e,"=",0))}orWhereDoesntHave(t,e=()=>{}){return this.orWhere(this.getFieldWhereForRelations(t,e,"=",0))}groupBy(...t){return t.forEach(e=>{this.groups.push({field:e})}),this}orderBy(t,e="asc"){return this.orders.push({field:t,direction:e}),this}limit(t){return this.take=t,this}offset(t){return this.skip=t,this}with(t,e=()=>{}){return this.eagerLoad[t]=e,this}withAll(t=()=>{}){let e=this.model.$fields();Object.values(this.model.$types()).forEach(i=>{e={...e,...i.fields()}});for(const i in e)e[i]instanceof f&&this.with(i,t);return this}withAllRecursive(t=3){return this.withAll(e=>{t>0&&e.withAllRecursive(t-1)})}useCache(t,e){return this.fromCache=!0,this.cacheConfig={key:t,params:e},this}getFieldWhereForRelations(t,e=()=>{},s,i){const n=this.newQuery(this.model.$entity()).with(t,e).get(!1).filter(o=>V(d(o[t])?o[t].length:o[t]===null?0:1,typeof s=="number"?s:i??1,typeof s=="number"||i===void 0?">=":s)).map(o=>o.$getIndexId());return o=>n.includes(o.$getIndexId())}all(){const t=this.commit("all"),e=[];for(const s in t)e.push(this.hydrate(t[s],{visible:this.visible,hidden:this.hidden}));return e}get(t=!0){if(!this.fromCache||!this.cache)return this.internalGet(t);const e=this.cacheConfig.key?this.cacheConfig.key+JSON.stringify(this.cacheConfig.params):nt(this.model.$entity(),{where:this.wheres,groups:this.groups,orders:this.orders,eagerLoads:this.eagerLoad,skip:this.skip,take:this.take,hidden:this.hidden,visible:this.visible}),s=this.cache.get(e);if(s)return s;const i=this.internalGet(t);return this.cache.set(e,i),i}internalGet(t){this.model.$entity()!==this.model.$baseEntity()&&this.where(this.model.$typeKey(),this.model.$fields()[this.model.$typeKey()].make());const e=this.select();return K(e)||this.eagerLoadRelations(e),t&&e.forEach(s=>s.$self().retrieved(s)),this.groups.length>0?this.filterGroup(e):e}first(){return this.limit(1).get()[0]??null}find(t){return this.whereId(t)[d(t)?"get":"first"]()}select(){let t=this.all();return t=this.filterWhere(t),t=this.filterOrder(t),t=this.filterLimit(t),t}filterWhere(t){if(K(this.wheres))return t;const e=this.getWhereComparator();return t.filter(s=>e(s))}getWhereComparator(){const{and:t,or:e}=st(this.wheres,s=>s.boolean);return s=>{const i=[];return t&&i.push(t.every(n=>this.whereComparator(s,n))),e&&i.push(e.some(n=>this.whereComparator(s,n))),i.includes(!0)}}whereComparator(t,e){return O(e.field)?e.field(t):d(e.value)?e.value.includes(t[e.field]):O(e.value)?e.value(t[e.field]):t[e.field]===e.value}filterOrder(t){if(this.orders.length===0)return t;const e=this.orders.map(i=>i.field),s=this.orders.map(i=>i.direction);return X(t,e,s)}filterGroup(t){const e={},s=this.groups.map(i=>i.field);return t.forEach(i=>{const n=s.length===1?i[s[0]]:`[${s.map(o=>i[o]).toString()}]`;e[n]=(e[n]||[]).concat(i)}),e}filterLimit(t){return this.take!==null?t.slice(this.skip,this.skip+this.take):t.slice(this.skip)}load(t){this.eagerLoadRelations(t)}eagerLoadRelations(t){for(const e in this.eagerLoad)this.eagerLoadRelation(t,e,this.eagerLoad[e])}eagerLoadRelation(t,e,s){const i=this.getRelation(e),n=this.newQueryForRelation(i);i.addEagerConstraints(n,t),s(n),i.match(e,t,n)}getRelation(t){return this.model.$getRelation(t)}revive(t){return d(t)?this.reviveMany(t):this.reviveOne(t)}reviveOne(t){const e=this.model.$getIndexId(t),s=this.commit("get")[e]??null;if(!s)return null;const i=this.hydrate(s);return this.reviveRelations(i,t),i}reviveMany(t){return t.reduce((e,s)=>{const i=this.reviveOne(s);return i&&e.push(i),e},[])}reviveRelations(t,e){const s=this.model.$fields();for(const i in e){const n=s[i];if(!(n instanceof f))continue;const o=e[i];if(!o)return;if(n instanceof T){const a=t[n.getType()];t[i]=this.newQuery(a).reviveOne(o);continue}t[i]=d(o)?this.newQueryForRelation(n).reviveMany(o):this.newQueryForRelation(n).reviveOne(o)}}new(){const t=this.hydrate({});return this.commit("insert",this.compile(t)),t}save(t){let e=this.newInterpreter().process(t);const s=this.model.$types(),i=this.model.$baseEntity()!==this.model.$entity();if(Object.values(s).length>0||i){const a=Object.keys(s),h={};t=d(t)?t:[t],t.forEach(c=>{const l=a.includes(`${c[this.model.$typeKey()]}`)||i?c[this.model.$typeKey()]??this.model.$fields()[this.model.$typeKey()].value:a[0];h[l]||(h[l]=[]),h[l].push(c)});for(const c in h){const l=s[c];l.entity===this.model.$entity()?e=this.newInterpreter().process(h[c]):this.newQueryWithConstraints(l.entity).save(h[c])}}const[n,o]=e;for(const a in o){const h=this.newQuery(a),c=o[a];h.saveElements(c)}return this.revive(n)}saveElements(t){const e={},s=this.commit("all"),i=[];for(const n in t){const o=t[n],a=s[n],h=a?this.hydrate({...a,...o},{operation:"set",action:"update"}):this.hydrate(o,{operation:"set",action:"save"}),c=h.$self().saving(h,o),l=a?h.$self().updating(h,o):h.$self().creating(h,o);c===!1||l===!1||(i.push(()=>h.$self().saved(h,o)),i.push(()=>a?h.$self().updated(h,o):h.$self().created(h,o)),e[n]=h.$getAttributes(),Object.values(h.$types()).length>0&&!e[n][h.$typeKey()]&&(e[n][h.$typeKey()]=o[h.$typeKey()]))}Object.keys(e).length>0&&(this.commit("save",e),i.forEach(n=>n()))}insert(t){const e=this.hydrate(t);return this.commit("insert",this.compile(e)),e}fresh(t){const e=this.hydrate(t,{action:"update"});return this.commit("fresh",this.compile(e)),e}update(t){const e=this.get(!1);if(K(e))return[];const s=e.map(i=>{const n=this.hydrate({...i.$getAttributes(),...t},{action:"update"});return i.$self().updating(i,t)===!1?i:(n.$self().updated(n),n)});return this.commit("update",this.compile(s)),s}destroy(t){return $(!this.model.$hasCompositeKey(),["You can't use the `destroy` method on a model with a composite key.","Please use `delete` method instead."]),d(t)?this.destroyMany(t):this.destroyOne(t)}destroyOne(t){const e=this.find(t);if(!e)return null;const[s,i]=this.dispatchDeleteHooks(e);return i.includes(e.$getIndexId())||(this.commit("destroy",[e.$getIndexId()]),s.forEach(n=>n())),e}destroyMany(t){const e=this.find(t);if(K(e))return[];const[s,i]=this.dispatchDeleteHooks(e),n=this.getIndexIdsFromCollection(e).filter(o=>!i.includes(o));return this.commit("destroy",n),s.forEach(o=>o()),e}delete(){const t=this.get(!1);if(K(t))return[];const[e,s]=this.dispatchDeleteHooks(t),i=this.getIndexIdsFromCollection(t).filter(n=>!s.includes(n));return this.commit("delete",i),e.forEach(n=>n()),t}flush(){return this.commit("flush"),this.hydratedData.clear(),this.get(!1)}checkAndDeleteRelations(t){const e=t.$fields();for(const s in e){const i=e[s];if(e[s]instanceof f&&i.onDeleteMode&&t[s]){const o=(d(t[s])?t[s]:[t[s]]).map(h=>h[h.$getLocalKey()]),a={};if(i instanceof W){this.newQuery(i.pivot.$entity()).where(i.foreignPivotKey,t[t.$getLocalKey()]).delete();continue}switch(i.onDeleteMode){case"cascade":{this.newQueryForRelation(i).destroy(o);break}case"set null":{i.foreignKey&&(a[i.foreignKey]=null),i.morphId&&(a[i.morphId]=null,a[i.morphType]=null),this.newQueryForRelation(i).whereId(o).update(a);break}}}}}dispatchDeleteHooks(t){const e=[],s=[];return t=d(t)?t:[t],this.withAll().load(t),t.forEach(i=>{i.$self().deleting(i)===!1?s.push(i.$getIndexId()):(e.push(()=>i.$self().deleted(i)),this.checkAndDeleteRelations(i))}),[e,s]}getIndexIdsFromCollection(t){return t.map(e=>e.$getIndexId())}hydrate(t,e){return d(t)?t.map(s=>this.hydrate(s,e)):this.getHydratedModel(t,{relations:!1,...e||{}})}compile(t){return(d(t)?t:[t]).reduce((s,i)=>(s[i.$getIndexId()]=i.$getAttributes(),s),{})}getHydratedModel(t,e){const s=this.model.$getKeyName(),i=(d(s)?s:[s]).map(h=>t[h]).join(""),n=i&&this.hydratedData.get(i);if(n&&this.hidden.length===0&&this.visible.includes("*")&&k(t,n.$toJson()))return n;const o=this.model.$types()[t[this.model.$typeKey()]],a=(o?o.newRawInstance():this.model).$newInstance(t,{relations:!1,...e||{}});return i&&this.hydratedData.set(i,a),a}}var gt=(r,t,e)=>{if(!t.has(r))throw TypeError("Cannot "+e)},m=(r,t,e)=>(gt(r,t,"read from private field"),e?e.call(r):t.get(r)),mt=(r,t,e)=>{if(t.has(r))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(r):t.set(r,e)},p;class L{constructor(){mt(this,p,new Map)}has(t){var e;return!!(m(this,p).has(t)&&((e=m(this,p).get(t))!=null&&e.deref()))}get(t){const e=m(this,p).get(t);if(!e)return;const s=e.deref();if(s)return s;m(this,p).delete(t)}set(t,e){return m(this,p).set(t,new WeakRef(e)),this}get size(){return m(this,p).size}clear(){m(this,p).clear()}delete(t){return m(this,p).delete(t),!1}forEach(t){for(const[e,s]of this)t(s,e,this)}*[Symbol.iterator](){for(const[t,e]of m(this,p)){const s=e.deref();if(!s){m(this,p).delete(t);continue}yield[t,s]}}*entries(){for(const[t,e]of this)yield[t,e]}*keys(){for(const[t]of this)yield t}*values(){for(const[,t]of this)yield t}}p=new WeakMap;const wt=new L,$t={model:{withMeta:!1,hidden:["_meta"],visible:["*"]},cache:{shared:!0,provider:L}},w={...$t};class B{constructor(t,e){this.database=t,this.pinia=e,this.hydratedData=new Map}initialize(t){return w.cache&&w.cache!==!0&&(this.queryCache=w.cache.shared?wt:new w.cache.provider),t?(this.model=t.newRawInstance(),this):this.use?(this.model=this.use.newRawInstance(),this):this}getModel(){return $(!!this.model,["The model is not registered. Please define the model to be used at","`use` property of the repository class."]),this.model}piniaStore(){return H(this.model.$entity(),this.model.$piniaOptions())(this.pinia)}repo(t){return Kt(t)}query(){return new b(this.database,this.getModel(),this.queryCache,this.hydratedData,this.pinia)}cache(){return this.queryCache}where(t,e){return this.query().where(t,e)}orWhere(t,e){return this.query().orWhere(t,e)}whereHas(t,e=()=>{},s,i){return this.query().whereHas(t,e,s,i)}orWhereHas(t,e=()=>{},s,i){return this.query().orWhereHas(t,e,s,i)}has(t,e,s){return this.query().has(t,e,s)}orHas(t,e,s){return this.query().orHas(t,e,s)}doesntHave(t){return this.query().doesntHave(t)}orDoesntHave(t){return this.query().orDoesntHave(t)}whereDoesntHave(t,e=()=>{}){return this.query().whereDoesntHave(t,e)}orWhereDoesntHave(t,e=()=>{}){return this.query().orWhereDoesntHave(t,e)}withMeta(){return this.query().withMeta()}makeVisible(t){return this.query().makeVisible(t)}makeHidden(t){return this.query().makeHidden(t)}groupBy(...t){return this.query().groupBy(...t)}orderBy(t,e){return this.query().orderBy(t,e)}limit(t){return this.query().limit(t)}offset(t){return this.query().offset(t)}with(t,e){return this.query().with(t,e)}withAll(t){return this.query().withAll(t)}withAllRecursive(t){return this.query().withAllRecursive(t)}useCache(t,e){return this.query().useCache(t,e)}all(){return this.query().get()}find(t){return this.query().find(t)}revive(t){return this.query().revive(t)}make(t){return d(t)?t.map(e=>this.getModel().$newInstance(e,{relations:!0})):this.getModel().$newInstance(t,{relations:!0})}save(t){return this.query().save(t)}new(){return this.query().new()}insert(t){return this.query().insert(t)}fresh(t){return this.query().fresh(t)}destroy(t){return this.query().destroy(t)}flush(){return this.query().flush()}}B._isRepository=!0;class vt{constructor(){this.models={}}register(t){const e=t.$entity();this.models[e]||(this.models[e]=t,this.registerRelatedModels(t))}registerRelatedModels(t){const e=t.$fields();for(const s in e){const i=e[s];i instanceof f&&i.getRelateds().forEach(n=>{this.register(n)})}}getModel(t){return this.models[t]}}function Kt(r,t){const e=new vt,s=r._isRepository?new r(e,t).initialize():new B(e,t).initialize(r);try{const i=Object.values(s.getModel().$types());i.length>0?i.forEach(n=>e.register(n.newRawInstance())):e.register(s.getModel())}catch{}return s}class bt extends I{make(t){return t===void 0?this.value:t}}let It=class extends I{constructor(t,e){super(t,e)}make(t){return this.makeReturn("string",t)}};class Rt extends I{constructor(t,e){super(t,e)}make(t){return this.makeReturn("number",t)}}class kt extends I{constructor(t,e){super(t,e)}make(t){return this.makeReturn("boolean",t)}}class x extends f{constructor(t,e,s,i){super(t,e),this.foreignKey=s,this.localKey=i}getRelateds(){return[this.related]}define(t){return t.one(this.related,this.parent)}attach(t,e){e[this.foreignKey]=t[this.localKey]}addEagerConstraints(t,e){t.whereIn(this.foreignKey,this.getKeys(e,this.localKey))}match(t,e,s){const i=this.buildDictionary(s.get(!1));e.forEach(n=>{const o=n[this.localKey];i[o]?n.$setRelation(t,i[o][0]):n.$setRelation(t,null)})}buildDictionary(t){return this.mapToDictionary(t,e=>[e[this.foreignKey],e])}make(t){return t?this.related.$newInstance(t):null}}class Mt extends f{constructor(t,e,s,i){super(t,e),this.foreignKey=s,this.ownerKey=i,this.child=e}getRelateds(){return[this.child]}define(t){return t.one(this.child,this.parent)}attach(t,e){t[this.foreignKey]=e[this.ownerKey]}addEagerConstraints(t,e){t.whereIn(this.ownerKey,this.getEagerModelKeys(e))}getEagerModelKeys(t){return t.reduce((e,s)=>(s[this.foreignKey]!==null&&e.push(s[this.foreignKey]),e),[])}match(t,e,s){const i=this.buildDictionary(s.get(!1));e.forEach(n=>{const o=n[this.foreignKey];i[o]?n.$setRelation(t,i[o]):n.$setRelation(t,null)})}buildDictionary(t){return t.reduce((e,s)=>(e[s[this.ownerKey]]=s,e),{})}make(t){return t?this.child.$newInstance(t):null}}class Dt extends f{constructor(t,e,s,i){super(t,e),this.foreignKey=s,this.localKey=i}getRelateds(){return[this.related]}define(t){return t.many(this.related,this.parent)}attach(t,e){e[this.foreignKey]=t[this.localKey]}addEagerConstraints(t,e){t.whereIn(this.foreignKey,this.getKeys(e,this.localKey))}match(t,e,s){const i=this.buildDictionary(s.get(!1));e.forEach(n=>{const o=n[this.localKey];i[o]?n.$setRelation(t,i[o]):n.$setRelation(t,[])})}buildDictionary(t){return this.mapToDictionary(t,e=>[e[this.foreignKey],e])}make(t){return t?t.map(e=>this.related.$newInstance(e)):[]}}class Ct extends f{constructor(t,e,s,i){super(t,e),this.foreignKey=s,this.ownerKey=i,this.child=e}getRelateds(){return[this.child]}define(t){return t.many(this.child,this.parent)}attach(t,e){e[this.ownerKey]!==void 0&&(t[this.foreignKey]||(t[this.foreignKey]=[]),this.attachIfMissing(t[this.foreignKey],e[this.ownerKey]))}attachIfMissing(t,e){t.includes(e)||t.push(e)}addEagerConstraints(t,e){t.whereIn(this.ownerKey,this.getEagerModelKeys(e))}getEagerModelKeys(t){return t.reduce((e,s)=>[...e,...s[this.foreignKey]],[])}match(t,e,s){const i=this.buildDictionary(s.get(!1));e.forEach(n=>{const o=this.getRelatedModels(i,n[this.foreignKey]);n.$setRelation(t,o)})}buildDictionary(t){return t.reduce((e,s)=>(e[s[this.ownerKey]]=s,e),{})}getRelatedModels(t,e){return e.reduce((s,i)=>{const n=t[i];return n&&s.push(n),s},[])}make(t){return t?t.map(e=>this.child.$newInstance(e)):[]}}class Et extends f{constructor(t,e,s,i,n){super(t,e),this.morphId=s,this.morphType=i,this.localKey=n}getRelateds(){return[this.related]}define(t){return t.one(this.related,this.parent)}attach(t,e){e[this.morphId]=t[this.localKey],e[this.morphType]=this.parent.$entity()}addEagerConstraints(t,e){t.where(this.morphType,this.parent.$entity()).whereIn(this.morphId,this.getKeys(e,this.localKey))}match(t,e,s){const i=this.buildDictionary(s.get(!1));e.forEach(n=>{const o=n[this.localKey];i[o]?n.$setRelation(t,i[o]):n.$setRelation(t,null)})}buildDictionary(t){return t.reduce((e,s)=>(e[s[this.morphId]]=s,e),{})}make(t){return t?this.related.$newInstance(t):null}}class St extends f{constructor(t,e,s,i,n){super(t,e),this.morphId=s,this.morphType=i,this.localKey=n}getRelateds(){return[this.related]}define(t){return t.many(this.related,this.parent)}attach(t,e){e[this.morphId]=t[this.localKey],e[this.morphType]=this.parent.$entity()}addEagerConstraints(t,e){t.where(this.morphType,this.parent.$entity()),t.whereIn(this.morphId,this.getKeys(e,this.localKey))}match(t,e,s){const i=this.buildDictionary(s.get(!1));e.forEach(n=>{const o=n[this.localKey];i[o]?n.$setRelation(t,i[o]):n.$setRelation(t,[])})}buildDictionary(t){return this.mapToDictionary(t,e=>[e[this.morphId],e])}make(t){return t?t.map(e=>this.related.$newInstance(e)):[]}}class Tt extends f{constructor(t,e,s,i,n,o,a){super(t,e),this.through=s,this.firstKey=i,this.secondKey=n,this.localKey=o,this.secondLocalKey=a}getRelateds(){return[this.related,this.through]}define(t){return t.many(this.related,this.parent)}attach(t,e){}addEagerConstraints(t,e){}match(t,e,s){const i=s.newQuery(this.through.$entity()).where(this.firstKey,this.getKeys(e,this.localKey)).get(!1),n=s.where(this.secondKey,this.getKeys(i,this.secondLocalKey)).groupBy(this.secondKey).get(!1),o=this.buildDictionary(i,n);e.forEach(a=>{const h=a[this.localKey];o[h]?a.$setRelation(t,o[h][0]):a.$setRelation(t,[])})}buildDictionary(t,e){return this.mapToDictionary(t,s=>[s[this.firstKey],e[s[this.secondLocalKey]]])}make(t){return t?t.map(e=>this.related.$newInstance(e)):[]}}class u{constructor(t,e={operation:"set"}){this.$boot(),(e.fill??!0)&&this.$fill(t,e)}static fields(){return{}}static initializeSchema(){this.schemas[this.entity]={},this.fieldsOnDelete[this.entity]=this.fieldsOnDelete[this.entity]??{};const t={...this.fields(),...this.registries[this.entity]};for(const e in t){const s=t[e];this.schemas[this.entity][e]=typeof s=="function"?s():s,this.fieldsOnDelete[this.entity][e]&&(this.schemas[this.entity][e]=this.schemas[this.entity][e].onDelete(this.fieldsOnDelete[this.entity][e]))}}static setRegistry(t,e){return this.registries[this.entity]||(this.registries[this.entity]={}),this.registries[this.entity][t]=e,this}static setFieldDeleteMode(t,e){return this.fieldsOnDelete[this.entity]=this.fieldsOnDelete[this.entity]??{},this.fieldsOnDelete[this.entity][t]=e,this}static setMutator(t,e){return this.fieldMutators[t]=e,this}static setCast(t,e){return this.fieldCasts[t]=e,this}static setHidden(t){return this.hidden.push(t),this}static clearBootedModels(){this.booted={},this.schemas={},this.fieldMutators={},this.fieldCasts={},this.hidden=[],this.visible=[]}static clearRegistries(){this.registries={}}static newRawInstance(){return new this(void 0,{fill:!1})}static attr(t){return new bt(this.newRawInstance(),t)}static string(t){return new It(this.newRawInstance(),t)}static number(t){return new Rt(this.newRawInstance(),t)}static boolean(t){return new kt(this.newRawInstance(),t)}static uid(t){return new z(this.newRawInstance(),t)}static hasOne(t,e,s){const i=this.newRawInstance();return s=s??i.$getLocalKey(),new x(i,t.newRawInstance(),e,s)}static belongsTo(t,e,s){const i=t.newRawInstance();return s=s??i.$getLocalKey(),new Mt(this.newRawInstance(),i,e,s)}static belongsToMany(t,e,s,i,n,o){const a=t.newRawInstance(),h=this.newRawInstance(),c=e.newRawInstance();return n=n??h.$getLocalKey(),o=o??a.$getLocalKey(),this.schemas[t.entity][`pivot_${c.$entity()}`]=new x(a,c,i,o),new W(h,a,c,s,i,n,o)}static hasMany(t,e,s){const i=this.newRawInstance();return s=s??i.$getLocalKey(),new Dt(i,t.newRawInstance(),e,s)}static hasManyBy(t,e,s){const i=t.newRawInstance();return s=s??i.$getLocalKey(),new Ct(this.newRawInstance(),i,e,s)}static hasManyThrough(t,e,s,i,n,o){const a=this.newRawInstance(),h=e.newRawInstance();return n=n??a.$getLocalKey(),o=o??h.$getLocalKey(),new Tt(a,t.newRawInstance(),h,s,i,n,o)}static morphOne(t,e,s,i){const n=this.newRawInstance();return i=i??n.$getLocalKey(),new Et(n,t.newRawInstance(),e,s,i)}static morphTo(t,e,s,i=""){const n=this.newRawInstance(),o=t.map(a=>a.newRawInstance());return new T(n,o,e,s,i)}static morphMany(t,e,s,i){const n=this.newRawInstance();return i=i??n.$getLocalKey(),new St(n,t.newRawInstance(),e,s,i)}static mutators(){return{}}static casts(){return{}}static types(){return{}}$self(){return this.constructor}$entity(){return this.$self().entity}$config(){return this.$self().config}$baseEntity(){return this.$self().baseEntity??this.$entity()}$typeKey(){return this.$self().typeKey}$types(){return this.$self().types()}$piniaOptions(){return this.$self().piniaOptions}$primaryKey(){return this.$self().primaryKey}$fields(){return this.$self().schemas[this.$entity()]}$hidden(){return this.$self().hidden}$visible(){return this.$self().visible}$newInstance(t,e){const s=this.$self();return new s(t,e)}$boot(){this.$self().booted[this.$entity()]||(this.$self().booted[this.$entity()]=!0,this.$initializeSchema())}$initializeSchema(){this.$self().initializeSchema()}$casts(){return{...this.$getCasts(),...this.$self().fieldCasts}}$fill(t={},e={}){var h;const s=e.operation??"get",i={...w.model,...this.$config()};i.withMeta&&(this.$self().schemas[this.$entity()][this.$self().metaKey]=this.$self().attr({}));const n=this.$fields(),o=e.relations??!0,a={...this.$getMutators(),...this.$self().fieldMutators};for(const c in n){if(s==="get"&&!this.isFieldVisible(c,this.$hidden(),this.$visible(),e))continue;const l=n[c];let y=t[c];if(l instanceof f&&!o)continue;const g=a==null?void 0:a[c],R=(h=this.$casts()[c])==null?void 0:h.newRawInstance(n);g&&s==="get"&&(y=typeof g=="function"?g(y):typeof g.get=="function"?g.get(y):y),R&&s==="get"&&(y=R.get(y));let v=this.$fillField(c,l,y);g&&typeof g!="function"&&s==="set"&&g.set&&(v=g.set(v)),R&&s==="set"&&(v=R.set(v)),this[c]=this[c]??v}return s==="set"&&(this.$self().original=this.$getAttributes()),i.withMeta&&s==="set"&&this.$fillMeta(e.action),this}$fillMeta(t="save"){const e=Math.floor(Date.now()/1e3);t==="save"&&(this[this.$self().metaKey]={createdAt:e,updatedAt:e}),t==="update"&&(this[this.$self().metaKey].updatedAt=e)}$fillField(t,e,s){if(s!==void 0)return e instanceof T?e.setKey(t).make(s,this[e.getType()]):e.setKey(t).make(s);if(this[t]===void 0)return e.setKey(t).make()}isFieldVisible(t,e,s,i){const n=e.length>0?e:w.model.hidden,o=[...s.length>0?s:w.model.visible,String(this.$primaryKey())],a=i.visible??[],h=i.hidden??[];return(n.includes("*")||n.includes(t))&&!a.includes(t)||h.includes(t)?!1:(o.includes("*")||o.includes(t))&&!h.includes(t)||a.includes(t)}$getKeyName(){return this.$primaryKey()}$getKey(t){if(t=t??this,this.$hasCompositeKey())return this.$getCompositeKey(t);const e=t[this.$getKeyName()];return E(e)?null:e}$hasCompositeKey(){return d(this.$getKeyName())}$getCompositeKey(t){let e=[];return this.$getKeyName().every(s=>{const i=t[s];return E(i)?(e=null,!1):(e.push(i),!0)}),e===null?null:e}$getIndexId(t){const e=t??this,s=this.$getKey(e);return $(s!==null,["The record is missing the primary key. If you want to persist record","without the primary key, please define the primary key field with the","`uid` attribute."]),this.$stringifyId(s)}$stringifyId(t){return d(t)?JSON.stringify(t):String(t)}$getLocalKey(){return $(!this.$hasCompositeKey(),["Please provide the local key for the relationship. The model with the","composite key can't infer its local key."]),this.$getKeyName()}$getRelation(t){let e=this.$fields()[t];return Object.values(this.$types()).forEach(i=>{e===void 0&&(e=i.fields()[t])}),$(e instanceof f,[`Relationship [${t}] on model [${this.$entity()}] not found.`]),e}$setRelation(t,e){return t.includes("pivot")?(this.pivot=e,this):(this.$fields()[t]&&(this[t]=e),this)}$getMutators(){return this.$self().mutators()}$getCasts(){return this.$self().casts()}$getOriginal(){return this.$self().original}$refresh(){return this.$isDirty()&&this.$fill(this.$getOriginal(),{action:"save",relations:!1,operation:"set"}),this}$isDirty(t){const e=this.$getOriginal();return t?(Object.keys(e).includes(t)||A(['The property"',t,'"does not exit in the model "',this.$entity(),'"']),!k(this[t],e[t])):!k(e,this.$getAttributes())}$getAttributes(){return this.$toJson(this,{relations:!1})}$toJson(t,e={}){t=t??this;const s=t.$fields(),i=e.relations??!0,n={};for(const o in s){const a=s[o],h=t[o];if(!(a instanceof f)){n[o]=this.serializeValue(h);continue}i&&(n[o]=this.serializeRelation(h))}return n}serializeValue(t){return t===null?null:d(t)?this.serializeArray(t):typeof t=="object"?this.serializeObject(t):t}serializeArray(t){return t.map(e=>this.serializeValue(e))}serializeObject(t){const e={};for(const s in t)e[s]=this.serializeValue(t[s]);return e}serializeRelation(t){if(t!==void 0)return t===null?null:d(t)?t.map(e=>e.$toJson()):t.$toJson()}}u.primaryKey="id";u.metaKey="_meta";u.hidden=["_meta"];u.visible=[];u.typeKey="type";u.fieldsOnDelete={};u.original={};u.schemas={};u.registries={};u.piniaOptions={};u.fieldMutators={};u.fieldCasts={};u.booted={};u.saving=()=>{};u.updating=()=>{};u.creating=()=>{};u.deleting=()=>{};u.retrieved=()=>{};u.saved=()=>{};u.updated=()=>{};u.created=()=>{};u.deleted=()=>{};class j extends u{static fields(){return{id:this.uid(),questionId:this.attr(null),text:this.string(" "),correct:this.boolean(!1),isSelected:this.boolean(!1)}}}M(j,"entity","answers");class Ot extends u{static fields(){return{id:this.uid(),number:this.number(1),question:this.string(" "),answers:this.hasMany(j,"questionId"),showResults:this.boolean(!1),numCorrect:this.number(0),numIncorrect:this.number(0),maxScore:this.number(0),score:this.number(0)}}}M(Ot,"entity","questions");const xt=(r,t)=>{const e=r.__vccOpts||r;for(const[s,i]of t)e[s]=i;return e};const At={class:"but-text"},_t={__name:"UploadJsonComponent",props:["buttonText"],emits:["data"],setup(r,{emit:t}){const e=r;function s(){document.getElementById("fileUpload").click()}function i(n){const o=n.target.files[0],a=new FileReader;o&&(a.readAsText(o),a.onload=()=>{const h=JSON.parse(a.result);t("data",h)},a.onerror=h=>{console.log("Error ",h)})}return(n,o)=>(Q(),J("div",null,[D("input",{id:"fileUpload",type:"file",onChange:o[0]||(o[0]=a=>i(a)),hidden:""},null,32),D("button",{class:"file-upload button",onClick:o[1]||(o[1]=a=>s())},[D("span",At,G(e.buttonText),1)])]))}},Ht=xt(_t,[["__scopeId","data-v-3265026d"]]);export{j as A,Ot as Q,Ht as U,xt as _,Kt as u};
